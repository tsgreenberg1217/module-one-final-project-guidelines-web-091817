exit
uri.query['page']
uri.query
@result['response']['docs'][0]['headline']
@result['response']['docs'][0]['snippet']
@result['response']['docs'][0]
@result['response']['docs']
@result
@result['docs']
@result['docs']['snippet']
@result['docs'][0]
@result['snippet']
@result['status']
uri.query['page']
uri.query['page'].value
uri.query['hi']
uri.query['page']
@result
next
uri
next
exit
@result = JSON.parse(http.request(request).body)
request = Net::HTTP::Get.new(uri.request_uri)
api = JSON.parse(RestClient.get(https://developer.nytimes.com/article_search_v2.json#/Console/GET/articlesearch.json))
api['items'].collect{|index| 
api
api[1]
api[0]
api.collect{|hash| hash.class}
api.collect{|hash| hash}.class
api.collect{|hash| hash}
api.collect{|hash| hash}['items']
api.collect{|hash| hash}
api.collect{|hash| hash['items']}
api.collect{|hash| hash}['items']
api.collect{|hash| hash}
api.collect{|hash| hash['items']}
api.collect{|hash| hash[0]}
api.collect{|hash| hash}
api.collect{|hash| hash['items']}
api.collect{|hash| hash['items']}.collect
api.collect{|hash| hash['items']}.collect{|item| item['essay'] != nil}
api.collect{|hash| hash['items']}.collect{|item| item['essay'] != nil}.first
api.collect{|hash| hash['items']}.collect{|item| item['essay'] != nil]
api.collect{|hash| hash['items']}.collect{|item| item['essay'] != nil].first
api
api = JSON.parse(RestClient.get('http://chroniclingamerica.loc.gov/search/titles/results/?terms=michigan&format=json&page=1'))
api
get_api_info(link2['url'])
link2
link2 = get_api_info(article)
get_api_info(article)
article = "http://chroniclingamerica.loc.gov/lccn/sn93023625.json"
get_api_info(initial_link)['items'][0]['url']
get_api_info(initial_link)
next
get_api_info(initial_link)
next
get_api_info(initial_link)
exit
api['items'][0]['url']
api
api = JSON.parse(RestClient.get('http://chroniclingamerica.loc.gov/search/titles/results/?terms=michigan&format=json&page=1'))
JSON.parse(RestClient.get('http://chroniclingamerica.loc.gov/search/titles/results/?terms=michigan&format=json&page=1'))
